scalar DateTime

type Error {
  path: String!
  message: String!
}

enum Sex {
  MALE
  FEMALE
}

type User {
  id: ID!
  email: String!
  dogs: [Dog]!
}

type Dog {
  name: String!
  breed: String!
  sex: Sex!
  dateOfBirth: DateTime!
  owner: User!
}

input AuthInput {
  email: String!
  password: String!
}

type AuthResponse {
  user: User
  errors: [Error!]
}

type Query {
  me: User
  dogs: [Dog!]
}

type Mutation {
  register(input: AuthInput): AuthResponse!
  login(input: AuthInput): AuthResponse!
  logout: Boolean!
}
